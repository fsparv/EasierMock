apply plugin: 'java'
apply plugin: 'eclipse'

compileJava {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
}
version = 1.0

repositories {
  mavenCentral()
}

dependencies {
    compile 'junit:junit-dep:4.10'
    compile 'org.easymock:easymock:3.1'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jar {
    from 'LICENSE.txt'
    rename '(LICENSE.txt)', 'META-INF/$1'
}

sourcesJar {
    from 'LICENSE.txt'
    rename '(LICENSE.txt)', 'META-INF/$1'
}

javadocJar {
    from 'LICENSE.txt'
    rename '(LICENSE.txt)', 'META-INF/$1'
}

jar.manifest.attributes getManifestAttributes()
sourcesJar.manifest.attributes getManifestAttributes()
javadocJar.manifest.attributes getManifestAttributes()

def getManifestAttributes() {
    Map<String,String> attrs = new LinkedHashMap<>();
    attrs.put('Implementation-Title', project.name)
    attrs.put('Implementation-Version', version)
    attrs.put('Build-Timestamp', getTimestamp())
    attrs.put('Build-Jdk', getJdk())
    attrs.put('Build-Tool', GradleVersion.current())
    return attrs
}

def getTimestamp() {
    def dt = new java.util.Date()
    def df = new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss', Locale.ENGLISH)
    df.format(dt)
}

def getJdk() {
    "${System.getProperty('java.version')} (${System.getProperty('java.vm.vendor')} ${System.getProperty('java.vm.version')})"
}
